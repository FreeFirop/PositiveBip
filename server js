const express = require('express');
const bodyParser = require('body-parser');
const { OAuth2Client } = require('google-auth-library');

const app = express();
const client = new OAuth2Client('125738918519-tsf5ou52gkjufdlnos54vltf2lujs68e.apps.googleusercontent.com');
const CLIENT_SECRET = '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';

app.use(bodyParser.json());

app.post('/tokensignin', async (req, res) => {
    const token = req.body.idtoken;
    try {
        const ticket = await client.verifyIdToken({
            idToken: token,
            audience: '125738918519-tsf5ou52gkjufdlnos54vltf2lujs68e.apps.googleusercontent.com', // Specify the CLIENT_ID of the app that accesses the backend
        });
        const payload = ticket.getPayload();
        const userid = payload['sub'];
        
        // TODO: Create or update user in your database
        // For now, just log the payload
        console.log('User ID: ', userid);
        console.log('Payload: ', payload);

        res.json({ success: true });
    } catch (error) {
        console.error('Error verifying token: ', error);
        res.status(400).json({ success: false, error: 'Token verification failed' });
    }
});

app.listen(3000, () => {
    console.log('Server started on http://localhost:3000');
});
